{"version":3,"sources":["lib/Stage.js","lib/ZoomContainer.js","lib/WorldMap.js","lib/TimeLine.js","lib/countryBarchart.js","lib/util.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Stage","width","height","children","svgRef","useRef","useState","svg","setSvg","useEffect","current","id","ref","Provider","value","ZoomContainer","svgElement","useContext","x","y","k","setTransform","selection","d3","zoom","scaleExtent","on","transform","call","CircleTooptip","styled","div","WorldMap","props","tooltipInnerHTML","ter","_","get","state","ordinalcolorScale","scaleOrdinal","linearcolorScale","scaleLinear","domain","extractData","length","range","legendLinear","legendColor","shapeWidth","orient","scale","this","legendOrdinal","shapePadding","displayValue","append","attr","nextProps","nextState","selectAll","remove","terrorist","console","log","mercator","geoMercator","project","geoPath","projection","SelectedCountries","world","features","map","feature","index","d","key","fill","stroke","strokeWidth","onMouseOver","document","querySelector","getAttribute","onMouseLeave","onClick","classed","style","centroid","push","filter","item","forEach","transition","duration","fontWeight","textAnchor","cursor","visibility","longitude","latitude","cx","cy","r","onMouseMove","e","left","screenX","top","screenY","window","pageYOffset","innerHTML","Component","margin","TimelineChart","bars","xAxis","yAxis","ticks","brushEnd","updateRange","updateTerrorist","x1","x2","xScale","invert","filteredData","dataForTimeline","TIME","DAT","newData","includes","brush","extent","refs","yScale","text","i","prevState","parseMonthDayYear","timeParse","dateToTerroristCount","dateToCasualities","dateToConvertDate","date","Object","keys","time","Date","TOT","CAU","sort","a","b","min","max","Math","colorExtent","reverse","colorScale","interpolator","isColored","require","Tooltip","defaultSvgWidth","defaultSvgHeight","defaultSvgMargin","right","bottom","defaultSvgScrollHeight","defaultPadding","defaultSliceWidth","CountryBarChart","xAxisRef","element","setState","yAxisRef","scrollRef","scrollDrag","newX","scrollSelectorX","dx","newSlice","oldSlice","sliceStart","scrollSelectorMaxX","scrollSelectorMinX","round","scrollBandWidth","calculateBars","newSliceStart","sliceWidth","svgHeight","svgMargin","svgScrollHeight","undefined","countryToTerroristCount","dataForBarchart","country","COUNTRY","activityDomain","slice","valueMax","bandwidth","tot","cau","calculateScrollBars","xScrollScale","yScrollScale","scrollActivityDomain","scrollX","scrollY","scrollWidth","scrollHeight","scrollFill","calculateScrolSellector","scrollBarsLength","svgWidth","svgScrollMargin","scaleWidth","scrollSelectorWidth","calculateChart","scrollBars","states","componentDidMount","padding","clickedCountry","marginLeft","html","onMouseOut","indexOf","className","opacity","Updatedata","data","Country","Year","Month","Day","AttackType","Casualities","Option","Select","Title","TitleHeader","Container","WorldMapContainer","WorldMapTitle","SelectionContainer","SelectionHeaderContainer","SelectionHeader","SelectionItem","Form","Item","App","handleCountrySelectAll","CountryFilter","filteredData2","YearFilter","MonthFilter","DayFilter","AttackTypeFilter","CasualitiesFilter","handleYearSelectAll","handleMonthSelectAll","handleDaySelectAll","handleAttackTypeSelectAll","onCasualitiesChange","CasualitiesValue","onCasualitiesChangeMin","onCasualitiesChangeMax","onDisplayChange","target","onDisplayChange2","displayValue2","showModal","ModalVisible","getFieldDecorator","form","radioStyle","display","lineHeight","justifyContent","flexDirection","marginTop","Group","onChange","color","fontFamily","backgroundColor","borderColor","type","title","visible","footer","centered","onCancel","label","paddingLeft","initialValue","getValueFromEvent","mode","placeholder","maxTagCount","optionLabelProp","span","step","defaultValue","background","marginBottom","tip","create","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a8fe335.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\n\nconst Context = React.createContext(null)\n\nexport function Stage({ width, height, children }) {\n  const svgRef = useRef(null)\n  const [svg, setSvg] = useState(null)\n  useEffect(() => setSvg(svgRef.current), [])\n  return (\n    <svg id='WorldMap' ref={svgRef} width={width} height={height}>\n      <Context.Provider value={svg}>{children}</Context.Provider>\n    </svg>\n  )\n}\n\nexport function useSvg() {\n  return React.useContext(Context)\n}","import * as d3 from \"d3\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSvg } from \"./Stage\"\n\nexport function ZoomContainer({ children }) {\n  const svgElement = useSvg()\n  const [{ x, y, k }, setTransform] = useState({ x: 0, y: 0, k: 1 })\n\n  useEffect(() => {\n    if (!svgElement) return\n    const selection = d3.select(svgElement)\n    const zoom = d3.zoom().scaleExtent([1, 10]).on(\"zoom\", function() {\n      setTransform(d3.event.transform)\n    })\n    selection.call(zoom)\n    return () => selection.on(\".zoom\", null)\n  }, [svgElement])\n\n  return <g id='WorldMapG' transform={`translate(${x}, ${y}) scale(${k})`}>{children}</g>\n}","import { geoMercator, geoPath } from \"d3-geo\";\nimport * as d3 from \"d3\";\nimport { scaleOrdinal, scaleLinear } from \"d3-scale\";\nimport { legendColor } from \"d3-svg-legend\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport styled from \"styled-components\";\nimport { ZoomContainer } from \"./ZoomContainer\";\nimport { Stage } from \"./Stage\";\n\nconst CircleTooptip = styled.div`\n  visibility: hidden;\n  background-color: white;\n  border: solid;\n  border-width: 1px;\n  border-radius: 5px;\n  padding: 5px;\n  padding-top: 10px;\n  position: absolute;\n  font-size: 8px;\n  pointer-events: none;\n  font-family: Arial;\n`;\n\nclass WorldMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ordinalcolorScale: scaleOrdinal(d3.schemePaired),\n\n      linearcolorScale: scaleLinear()\n        .domain([\n          _.get(this.props.extractData[0], \"casualities\")[0],\n          _.get(this.props.extractData[0], \"casualities\")[\n            _.get(this.props.extractData[0], \"casualities\").length - 1\n          ]\n        ])\n        .range([\"orange\", \"purple\"])\n    };\n  }\n\n  componentDidMount() {\n    const legendLinear = legendColor()\n      .shapeWidth(30)\n      .orient(\"horizontal\")\n      .scale(this.state.linearcolorScale);\n    const legendOrdinal = legendColor()\n      .shapePadding(10)\n      .scale(this.state.ordinalcolorScale);\n    if (this.props.displayValue === \"AttackType\") {\n      d3.select(\"#colorLegend\")\n        .append(\"svg\")\n        .attr(\"height\", 250)\n        .append(\"g\")\n        .call(legendOrdinal);\n    } else {\n      d3.select(\"#colorLegend\")\n        .append(\"svg\")\n        .attr(\"height\", 100)\n        .append(\"g\")\n        .call(legendLinear);\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const legendLinear = legendColor()\n      .shapeWidth(50)\n      .orient(\"horizontal\")\n      .scale(this.state.linearcolorScale);\n    const legendOrdinal = legendColor()\n      .shapePadding(10)\n      .scale(this.state.ordinalcolorScale);\n    if (nextProps.displayValue === \"AttackType\") {\n      d3.select(\"#colorLegend\")\n        .selectAll(\"svg\")\n        .remove();\n      d3.select(\"#colorLegend\")\n        .append(\"svg\")\n        .attr(\"height\", 250)\n        .append(\"g\")\n        .call(legendOrdinal);\n    } else {\n      d3.select(\"#colorLegend\")\n        .selectAll(\"svg\")\n        .remove();\n      d3.select(\"#colorLegend\")\n        .append(\"svg\")\n        .attr(\"height\", 60)\n        .append(\"g\")\n        .call(legendLinear);\n    }\n  }\n\n\n  tooltipInnerHTML = ter => {\n    return `\n      <p>Year: ${_.get(ter, \"Year\", \"Unknown\")}</p>\n      <p>Month: ${_.get(ter, \"Month\", \"Unknown\")}</p>\n      <p>Day: ${_.get(ter, \"Day\", \"Unknown\")}</p>\n      <p>City: ${_.get(ter, \"city\", \"Unknown\")}</p>\n      <p>Country: ${_.get(ter, \"Country\", \"Unknown\")}</p>\n      <p>Attack Type: ${_.get(ter, \"AttackType\", \"Unknown\")}</p>\n      <p>Casualties: ${_.get(ter, \"casualities\", \"Unknown\")}</p>\n      `;\n  };\n\n  render() {\n    const { terrorist, displayValue } = this.props;\n    const { ordinalcolorScale, linearcolorScale } = this.state;\n    console.log(displayValue);\n    console.log(terrorist.length);\n    const mercator = geoMercator();\n    const project = geoPath().projection(mercator);\n    let SelectedCountries = [];\n    const height = 469;\n    const width = 560;\n    return (\n      <>\n        <Stage width=\"100%\" height=\"100%\">\n          <ZoomContainer>\n            {this.props.world.features.map((feature, index) => {\n              const d = project(feature);\n              return (\n                <>\n                  <path\n                    key={index}\n                    id={`country_${index}`}\n                    d={d}\n                    fill=\"#fff\"\n                    stroke=\"#666666\"\n                    strokeWidth={0.15}\n                    onMouseOver={() => {\n                      if (\n                        document\n                          .querySelector(`#country_${index}`)\n                          .getAttribute(\"class\") !== \"clicked\"\n                      ) {\n                        d3.select(`#country_${index}`).attr(\"fill\", \"#FFFF99\");\n                      }\n                      d3.select(`#country_${index}`).attr(\"cursor\", \"pointer\");\n                    }}\n                    onMouseLeave={() => {\n                      if (\n                        document\n                          .querySelector(`#country_${index}`)\n                          .getAttribute(\"class\") !== \"clicked\"\n                      ) {\n                        d3.select(`#country_${index}`).attr(\"fill\", \"white\");\n                      }\n                      d3.select(`#country_${index}`).attr(\"cursor\", \"default\");\n                    }}\n                    onClick={() => {\n                      let x, y, k;\n                      if (\n                        document\n                          .querySelector(`#country_${index}`)\n                          .getAttribute(\"class\") !== \"clicked\"\n                      ) {\n                        d3.select(`#country_${index}`)\n                          .classed(\"clicked\", true)\n                          .attr(\"fill\", \"#FFD700\");\n                        d3.select(`#countryLabel_${index}`)\n                          .classed(\"clicked\", true)\n                          .style(\"visibility\", \"visible\");\n                        const centroid = project.centroid(feature);\n                        SelectedCountries.push(centroid);\n                      } else {\n                        d3.select(`#country_${index}`)\n                          .classed(\"clicked\", false)\n                          .attr(\"fill\", \"white\");\n                        d3.select(`#countryLabel_${index}`)\n                          .classed(\"clicked\", true)\n                          .style(\"visibility\", \"hidden\");\n                        const centroid = project.centroid(feature);\n                        SelectedCountries = SelectedCountries.filter(\n                          item =>\n                            item[0] !== centroid[0] && item[1] !== centroid[1]\n                        );\n                      }\n\n                      if (SelectedCountries.length !== 0) {\n                        x = 0;\n                        y = 0;\n                        SelectedCountries.forEach(item => {\n                          x += item[0];\n                          y += item[1];\n                        });\n                        x = x / SelectedCountries.length;\n                        y = y / SelectedCountries.length;\n                        k = 4;\n                      } else {\n                        x = width / 2;\n                        y = height / 2;\n                        k = 1;\n                      }\n\n                      d3.select(\"#WorldMapG\")\n                        .transition()\n                        .duration(750)\n                        .attr(\n                          \"transform\",\n                          \"translate(\" +\n                            width / 2 +\n                            \",\" +\n                            height / 2 +\n                            \")scale(\" +\n                            k +\n                            \")translate(\" +\n                            -x +\n                            \",\" +\n                            -y +\n                            \")\"\n                        )\n                        .style(\"stroke-width\", 1.5 / 2.5 + \"px\")\n                        .style(\"font-size\", function() {\n                          return 12 / 2.5 + \"px\";\n                        });\n                    }}\n                  />\n                  <text\n                    style={{\n                      fontWeight: \"bold\",\n                      textAnchor: \"middle\",\n                      cursor: \"default\",\n                      visibility: \"hidden\"\n                    }}\n                    id={`countryLabel_${index}`}\n                    transform={\"translate(\" + project.centroid(feature) + \")\"}\n                  >\n                    {_.get(feature, \"properties.name_long\")}\n                  </text>\n                </>\n              );\n            })}\n            {terrorist.map((ter, index) => {\n              // convert the lat,lng to an x,y\n              // using the mercator projection\n\n              const [x, y] = mercator([ter.longitude, ter.latitude]);\n              const tooltipInnerHTML =\n                \"<div><p>Year: \" +\n                _.get(ter, \"Year\", \"Unknown\") +\n                \"</p><p>Month: \" +\n                _.get(ter, \"Month\", \"Unknown\") +\n                \"</p><p>Day: \" +\n                _.get(ter, \"Day\", \"Unknown\") +\n                \"</p><p>City: \" +\n                _.get(ter, \"city\", \"Unknown\") +\n                \"</p><p>Country: \" +\n                _.get(ter, \"Country\", \"Unknown\") +\n                \"</p><p>Attack Type: \" +\n                _.get(ter, \"AttackType\", \"Unknown\") +\n                \"</p><p>Casualities: \" +\n                _.get(ter, \"casualities\", \"Unknown\") +\n                \"</p></div>\";\n\n              return (\n                <circle\n                  key={index}\n                  id={`WorldMap_Circle_${index}`}\n                  cx={x}\n                  cy={y}\n                  r={terrorist.length > 30 ? 0.5 : 3}\n                  fill={\n                    displayValue === \"AttackType\"\n                      ? ordinalcolorScale(_.get(ter, \"AttackType\"))\n                      : linearcolorScale(_.get(ter, \"casualities\"))\n                  }\n                  stroke=\"#000\"\n                  strokeWidth={0.1}\n                  onMouseOver={() => {\n                    document.querySelector(\"#circletooltip\").style.visibility =\n                      \"visible\";\n                    d3.select(`#WorldMap_Circle_${index}`).style(\n                      \"r\",\n                      terrorist.length > 30 ? 1.5 : 4\n                    );\n                  }}\n                  onMouseMove={e => {\n                    document.querySelector(\n                      \"#circletooltip\"\n                    ).style.left = `${e.screenX + 10}px`;\n                    document.querySelector(\n                      \"#circletooltip\"\n                    ).style.top = `${e.screenY + window.pageYOffset - 85}px`;\n                    document.querySelector(\n                      \"#circletooltip\"\n                    ).innerHTML = tooltipInnerHTML;\n                  }}\n                  onMouseLeave={() => {\n                    d3.select(`#WorldMap_Circle_${index}`).style(\n                      \"r\",\n                      terrorist.length > 30 ? 0.5 : 3\n                    );\n                    document.querySelector(\"#circletooltip\").style.visibility =\n                      \"hidden\";\n                  }}\n                />\n                \n              );\n            })}\n          </ZoomContainer>\n        </Stage>\n        <CircleTooptip id=\"circletooltip\" />\n      </>\n    );\n  }\n}\n\nexport default WorldMap;\n","import * as d3 from \"d3\";\nimport { timeParse } from \"d3-time-format\";\nimport { legendColor } from 'd3-svg-legend';\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nconst width = 700;\nconst height = 400;\nconst margin = { top: 20, right: 5, bottom: 20, left: 35 };\n\n\nclass TimelineChart extends Component {\n\nstate = {\n      bars: []\n    };\n    xAxis = d3.axisBottom();\n    yAxis = d3.axisLeft().ticks(5);\n  \n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { terrorist, range } = nextProps;\n    const parseMonthDayYear = timeParse(\"%m/%d/%Y\");\n    const dataForTimeline = [],\n      dateToTerroristCount = {},\n      dateToCasualities = {},\n      dateToConvertDate = {};\n    terrorist.forEach(d => {\n      const date = parseMonthDayYear(_.get(d, \"Date\"));\n      if (!dateToTerroristCount[date]) {\n        dateToTerroristCount[date] = 1;\n        dateToCasualities[date] = _.get(d, \"casualities\");\n        dateToConvertDate[date] = _.get(d, \"Date\");\n      } else {\n        dateToTerroristCount[date] += 1;\n        dateToCasualities[date] += _.get(d, \"casualities\")\n      }\n    });\n\n    Object.keys(dateToTerroristCount).forEach(time => {\n      dataForTimeline.push({\n        TIME: new Date(time),\n        TOT: dateToTerroristCount[time],\n        CAU: dateToCasualities[time],\n        DAT: dateToConvertDate[time]\n      });\n    });\n    dataForTimeline.sort((a, b) => {\n      return a.TIME - b.TIME;\n    });\n   \n    if (!terrorist) \n        return {};\n    console.log(dataForTimeline)\n    // 1. map date to x-position\n    // get min and max of date\n    const extent = d3.extent(dataForTimeline, d => d.TIME);\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([margin.left, width - margin.right]);\n\n    // 2. map high temp to y-position\n    // get min/max of high temp\n    const [min, max] = d3.extent(dataForTimeline, d => d.TOT);\n    const yScale = d3\n      .scaleLinear()\n      .domain([Math.min(min, 0), max])\n      .range([height - margin.bottom, margin.top]);\n\n    // 3. map avg temp to color\n    // get min/max of avg\n    const colorExtent = d3.extent(dataForTimeline, d => d.CAU).reverse();\n    const colorScale = d3\n      .scaleSequential()\n      .domain(colorExtent)\n      .interpolator(d3.interpolateRdYlBu);\n      const legendLinear = legendColor()\n      .shapeWidth(50)\n      .orient('horizontal')\n      .scale(colorScale)\n      d3.select('#colorLegend2').selectAll(\"svg\").remove()\n    d3.select('#colorLegend2').append(\"svg\").attr(\"height\",60).append(\"g\").call(legendLinear)\n\n    // array of objects: x, y, height\n    const bars = dataForTimeline.map(d => {\n      // slice should be colored if there's no time range\n      // or if the slice is within the time range\n      // slice should be colored if there's no time range\n      // or if the slice is within the time range\n      const isColored =\n        !range.length || (range[0] <= d.TIME && d.TIME <= range[1]);\n      return {\n        x: xScale(d.TIME),\n        y: yScale(d.TOT),\n        height: height - margin.bottom - yScale(d.TOT),\n        fill: isColored ? colorScale(d.CAU) : \"#ccc\"\n      };\n    });\n    \n\n    return { bars, xScale, yScale, dataForTimeline };\n  }\n\n  componentDidMount() {\n    this.brush = d3\n      .brushX()\n      .extent([\n        [margin.left, margin.top],\n        [width - margin.right, height - margin.bottom]\n      ])\n      .on(\"end\", this.brushEnd);\n    d3.select(this.refs.brush).call(this.brush);\n    this.xAxis.scale(this.state.xScale);\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    this.yAxis.scale(this.state.yScale);\n    d3.select(this.refs.yAxis).call(this.yAxis)\n    d3.select('#timeline-containter').append(\"text\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 55)\n    .attr(\"x\", -20)\n    .text(\"# Terrorist Activities\")\n  }\n\n  componentDidUpdate() {\n    this.xAxis.scale(this.state.xScale);\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    this.yAxis.scale(this.state.yScale);\n    d3.select(this.refs.yAxis).call(this.yAxis);\n  }\n\n  brushEnd = () => {\n    if (!d3.event.selection) {\n        this.props.updateRange([]);\n        this.props.updateTerrorist(this.props.terrorist)\n      return;\n    }\n    const [x1, x2] = d3.event.selection;\n    const range = [this.state.xScale.invert(x1), this.state.xScale.invert(x2)];\n    const filteredData = []\n    this.props.updateRange(range);\n    this.state.dataForTimeline.forEach(function(d) {\n        if (d.TIME >= range[0] && d.TIME <= range[1]) {\n            filteredData.push(d.DAT);\n        }\n    });\n\n    const newData = this.props.terrorist.filter(d=>filteredData.includes(_.get(d,'Date')))\n    this.props.updateTerrorist(newData)\n  };\n\n\n\n  render() {\n    return (\n      <svg id=\"timeline-containter\" width={width} height={height}>\n        {this.state.bars.map((d, i) => (\n          <rect\n            key={i}\n            x={d.x}\n            y={d.y}\n            width=\"2\"\n            height={d.height}\n            fill={d.fill}\n          />\n        ))}\n        <g>\n          <g\n            ref=\"xAxis\"\n            transform={`translate(0, ${height - margin.bottom})`}\n          />\n          <g ref=\"yAxis\" transform={`translate(${margin.left}, 0)`} />\n          <g ref=\"brush\" />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default TimelineChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport { geoMercator, geoPath } from \"d3-geo\";\nimport _ from \"lodash\";\nimport { legendColor } from \"d3-svg-legend\";\nimport styled from \"styled-components\";\n\nconst world = require(\"./dataset/filtered_world.json\");\n\nconst Tooltip = styled.div`\nposition: absolute;\n  width: 120px;\n  height: 60px;\n  background-color: white;\n  border: solid;\n  border-width: 1px;\n  border-radius: 5px;\n  padding: 5px;\n  padding-top: 10px;\n  font-size: 8px;\n  font-family: Arial;\n  pointer-events: none;\n  opacity:0;\n`\n\n// ***** Default svg data\nconst defaultSvgWidth = 700;\nconst defaultSvgHeight = 400;\nconst defaultSvgMargin = { top: 40, right: 5, bottom: 20, left: 35 };\nconst defaultSvgScrollHeight = 60;\nconst defaultPadding = 0.2;\nconst defaultSliceWidth = 10;\n\nclass CountryBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    const svgWidth = props.width === undefined ? defaultSvgWidth : props.width;\n    const svgHeight =\n      props.height === undefined ? defaultSvgHeight : props.height;\n    const svgMargin =\n      props.margin === undefined ? defaultSvgMargin : props.margin;\n    const svgScrollHeight =\n      props.scrollHeight === undefined\n        ? defaultSvgScrollHeight\n        : props.scrollHeight;\n    const svgScrollMargin = { ...svgMargin, bottom: 0 };\n    const padding =\n      props.padding === undefined ? defaultPadding : props.padding;\n    const sliceWidth =\n      props.bars === undefined ? defaultSliceWidth : props.bars;\n\n    this.state = {\n      svgWidth,\n      svgHeight,\n      svgMargin,\n      svgScrollHeight,\n      svgScrollMargin,\n      padding,\n      sliceStart: 0,\n      sliceWidth,\n      clickedCountry:'',\n\n      xScale: d3\n        .scaleBand()\n        .range([svgMargin.left, svgWidth - svgMargin.right])\n        .padding(padding),\n      yScale: d3\n        .scaleLinear()\n        .range([\n          svgHeight - 50 - svgMargin.bottom - svgScrollHeight,\n          svgMargin.top\n        ]),\n      xAxisRef: null,\n      yAxisRef: null,\n\n      xScrollScale: d3\n        .scaleBand()\n        .range([svgScrollMargin.left, svgWidth - svgScrollMargin.right])\n        .padding(padding),\n      yScrollScale: d3\n        .scaleLinear()\n        .range([svgHeight, svgHeight - svgScrollHeight + svgScrollMargin.top]),\n      scrollRef: null,\n\n      scrollSelectorWidth: 0,\n      scrollSelectorMinX: 0,\n      scrollSelectorMaxX: 0,\n      scrollBandWidth: 0,\n      scrollSelectorX: svgScrollMargin.left,\n\n      bars: [],\n      scrollBars: [],\n      terrorist: this.props.terrorist\n    };\n\n    this.xAxis = d3.axisBottom().scale(this.state.xScale);\n    this.yAxis = d3\n      .axisLeft()\n      .scale(this.state.yScale)\n      .ticks(5);\n  }\n\n  componentWillReceiveProps(nextProps){\n    if (this.props.terrorist !== nextProps.terrorist){\n      this.setState({terrorist:nextProps.terrorist})\n      const bars = this.calculateBars(nextProps.terrorist);\n      const scrollBars = this.calculateScrollBars(nextProps.terrorist);\n      const selector = this.calculateScrolSellector(scrollBars.length);\n  \n      const states = { ...selector, bars, scrollBars };\n  \n      this.setState(states);\n    }\n  }\n\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   const { terrorist } = nextProps;\n  //   return { terrorist };\n  // }\n\n  xAxisRef = element => {\n    this.setState({ xAxisRef: element });\n    d3.select(element).call(this.xAxis);\n  };\n\n  yAxisRef = element => {\n    this.setState({ yAxisRef: element });\n    d3.select(element).call(this.yAxis);\n  };\n\n  scrollRef = element => {\n    this.setState({ scrollRef: element });\n    d3.select(element).call(d3.drag().on(\"drag\", this.scrollDrag));\n  };\n\n  scrollDrag = () => {\n    let newX = this.state.scrollSelectorX + d3.event.dx;\n    let newSlice = 0;\n    const oldSlice = this.state.sliceStart;\n\n    if (newX > this.state.scrollSelectorMaxX) {\n      newX = this.state.scrollSelectorMaxX;\n    } else if (newX < this.state.scrollSelectorMinX) {\n      newX = this.state.scrollSelectorMinX;\n    }\n\n    newSlice = newX - this.state.scrollSelectorMinX;\n    newSlice = Math.round(newSlice / this.state.scrollBandWidth);\n\n    if (newSlice !== oldSlice) {\n      const bars = this.calculateBars(this.state.terrorist, newSlice);\n      this.setState({ scrollSelectorX: newX, sliceStart: newSlice, bars });\n    } else {\n      this.setState({ scrollSelectorX: newX });\n    }\n  };\n\n  calculateBars = (terrorist, newSliceStart) => {\n   \n    let {\n      xScale,\n      yScale,\n      sliceStart,\n      sliceWidth,\n      svgHeight,\n      svgMargin,\n      svgScrollHeight\n    } = this.state;\n\n    if (newSliceStart !== undefined) {\n      sliceStart = newSliceStart;\n    }\n\n    const countryToTerroristCount = {},\n      dataForBarchart = [],\n      dateToCasualities = {};\n    terrorist.forEach(d => {\n      const country = _.get(d, \"Country\");\n      if (!countryToTerroristCount[country]) {\n        countryToTerroristCount[country] = 1;\n        dateToCasualities[country] = _.get(d, \"casualities\");\n      } else {\n        countryToTerroristCount[country] += 1;\n        dateToCasualities[country] += _.get(d, \"casualities\");\n      }\n    });\n\n    Object.keys(countryToTerroristCount).forEach(country => {\n      dataForBarchart.push({\n        COUNTRY: country,\n        TOT: countryToTerroristCount[country],\n        CAU: dateToCasualities[country]\n      });\n    });\n    dataForBarchart.sort((a, b) => {\n      return b.TOT - a.TOT;\n    });\n\n    const activityDomain = dataForBarchart\n      .slice(sliceStart, sliceStart + sliceWidth)\n      .map(d => d.COUNTRY);\n    const valueMax = d3.max(dataForBarchart, d => d.TOT);\n\n    xScale.domain(activityDomain);\n    yScale.domain([0, valueMax]);\n\n    const colorExtent = d3.extent(dataForBarchart, d => d.CAU).reverse();\n    const colorScale = d3\n      .scaleSequential()\n      .domain(colorExtent)\n      .interpolator(d3.interpolate(\"purple\", \"orange\"));\n    const legendLinear = legendColor()\n      .shapeWidth(50)\n      .orient(\"horizontal\")\n      .scale(colorScale);\n    d3.select(\"#colorLegend2\")\n      .selectAll(\"svg\")\n      .remove();\n    d3.select(\"#colorLegend2\")\n      .append(\"svg\")\n      .attr(\"height\", 60)\n      .append(\"g\")\n      .call(legendLinear)\n      .selectAll(\"text\")\n      .attr(\"font-size\", \"10\");\n\n    const bars = dataForBarchart\n      .slice(sliceStart, sliceStart + sliceWidth)\n      .map((d, index) => {\n        const x = xScale(d.COUNTRY);\n        const y = yScale(d.TOT);\n        const width = xScale.bandwidth();\n        const height = svgHeight - 50 - svgMargin.bottom - svgScrollHeight - y;\n        const fill = colorScale(d.CAU);\n        const country = d.COUNTRY;\n        const tot = d.TOT;\n        const cau = d.CAU;\n\n        return {\n          index,\n          x,\n          y,\n          height,\n          width,\n          fill,\n          country,\n          tot,\n          cau\n        };\n      });\n\n    return bars;\n  };\n\n  calculateScrollBars = terrorist => {\n    const { xScrollScale, yScrollScale, svgHeight } = this.state;\n\n    const countryToTerroristCount = {},\n      dataForBarchart = [],\n      dateToCasualities = {};\n    terrorist.forEach(d => {\n      const country = _.get(d, \"Country\");\n      if (!countryToTerroristCount[country]) {\n        countryToTerroristCount[country] = 1;\n        dateToCasualities[country] = _.get(d, \"casualities\");\n      } else {\n        countryToTerroristCount[country] += 1;\n        dateToCasualities[country] += _.get(d, \"casualities\");\n      }\n    });\n\n    Object.keys(countryToTerroristCount).forEach(country => {\n      dataForBarchart.push({\n        COUNTRY: country,\n        TOT: countryToTerroristCount[country],\n        CAU: dateToCasualities[country]\n      });\n    });\n    dataForBarchart.sort((a, b) => {\n      return b.TOT - a.TOT;\n    });\n\n    const scrollActivityDomain = dataForBarchart.map(d => d.COUNTRY);\n    const valueMax = d3.max(dataForBarchart, d => d.TOT);\n\n    xScrollScale.domain(scrollActivityDomain);\n    yScrollScale.domain([0, valueMax]);\n\n    const scrollBars = dataForBarchart.map((d, index) => {\n      const scrollX = xScrollScale(d.COUNTRY);\n      const scrollY = yScrollScale(d.TOT);\n      const scrollWidth = xScrollScale.bandwidth();\n      const scrollHeight = svgHeight - scrollY;\n      const scrollFill = \"#cccccc\";\n\n      return {\n        index,\n        scrollX,\n        scrollY,\n        scrollWidth,\n        scrollHeight,\n        scrollFill\n      };\n    });\n\n    return scrollBars;\n  };\n\n  calculateScrolSellector = scrollBarsLength => {\n    const { sliceWidth, svgWidth, svgScrollMargin } = this.state;\n\n    const scaleWidth = svgWidth - svgScrollMargin.right - svgScrollMargin.left;\n    const scrollSelectorWidth = Math.round(\n      (sliceWidth / scrollBarsLength) * scaleWidth\n    );\n    const scrollSelectorMinX = svgScrollMargin.left;\n    const scrollSelectorMaxX =\n      svgWidth - svgScrollMargin.right - scrollSelectorWidth;\n    const scrollBandWidth = Math.round(scaleWidth / scrollBarsLength);\n\n    return {\n      scrollSelectorWidth,\n      scrollSelectorMinX,\n      scrollSelectorMaxX,\n      scrollBandWidth\n    };\n  };\n\n  calculateChart = () => {\n    if (this.state.terrorist === undefined) {\n      return;\n    }\n\n    const bars = this.calculateBars(this.state.terrorist);\n    const scrollBars = this.calculateScrollBars(this.state.terrorist);\n    const selector = this.calculateScrolSellector(scrollBars.length);\n\n    const states = { ...selector, bars, scrollBars };\n\n    this.setState(states);\n  };\n\n  componentDidMount = () => {\n    this.calculateChart();\n  };\n\n  componentDidUpdate() {\n    d3.select(this.state.xAxisRef)\n      .call(this.xAxis)\n      .selectAll(\"text\")\n      .attr(\"transform\", \"translate(-10,10)rotate(-45)\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-size\", 10);\n    d3.select(this.state.yAxisRef).call(this.yAxis);\n    d3.select(\"#countrybarchart-container\")\n      .append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"y\", 25)\n      .attr(\"x\", 160)\n      .text(\"# Terrorist Activities\");\n    \n  }\n\n  render() {\n    const mercator = geoMercator();\n    const project = geoPath().projection(mercator);\n    const height = 469;\n    const width = 560;\n    return (\n      <>\n        <svg\n          id=\"countrybarchart-container\"\n          style={{ marginLeft: \"15px\" }}\n          width={this.state.svgWidth}\n          height={this.state.svgHeight}\n        >\n          {this.state.bars.map((d, i) => (\n            <rect\n              key={i}\n              id={`barchart_${i}`}\n              x={d.x}\n              y={d.y}\n              width={d.width}\n              height={d.height}\n              fill={d.fill}\n              onMouseOver={(e) => {\n                d3.select(\"#barchart-tooptip\")\n                  .transition()\n                  .duration(200)\n                  .style(\"opacity\", 1);\n                d3.select(\"#barchart-tooptip\")\n                  .html(\n                    \"Country: \" +\n                      d.country +\n                      \"<br/>\" +\n                      \"# Terrorist Activities: \" +\n                      d.tot +\n                      \"<br/>\" +\n                      \"# Casualties: \" +\n                      d.cau\n                  )\n                  .style(\"left\", e.screenX +  10 + \"px\")\n                  .style(\"top\", e.screenY + window.pageYOffset - 85 + \"px\");\n                  d3.select(`#barchart_${i}`).attr(\"cursor\", \"pointer\");\n              }}\n              onMouseOut = {()=>{\n                  d3.select(\"#barchart-tooptip\").transition().duration(500).style(\"opacity\", 0);\n                  d3.select(`#barchart_${i}`).attr(\"cursor\", \"default\");\n              }}\n              onClick = {()=>{\n                const centroid = project.centroid(_.get(world,d.country));\n                d3.select(\"#WorldMapG\")\n                        .transition()\n                        .duration(750)\n                        .attr(\n                          \"transform\",\n                          \"translate(\" +\n                            width / 2 +\n                            \",\" +\n                            height / 2 +\n                            \")scale(\" +\n                            4 +\n                            \")translate(\" +\n                            -centroid[0] +\n                            \",\" +\n                            -centroid[1] +\n                            \")\"\n                        )\n                        .style(\"stroke-width\", 1.5 / 2.5 + \"px\")\n                        .style(\"font-size\", function() {\n                          return 12 / 2.5 + \"px\";\n                        });\n                        if(this.state.clickedCountry!==null){\n                          d3.select(`#country_${Object.keys(world).indexOf(this.state.clickedCountry)}`).classed(\"clicked\", false)\n                        .attr(\"fill\", \"white\");\n                        d3.select(`#countryLabel_${Object.keys(world).indexOf(this.state.clickedCountry)}`).classed(\"clicked\", false)\n                        .style(\"visibility\", \"hidden\");\n                        }\n                        d3.select(`#country_${Object.keys(world).indexOf(d.country)}`).classed(\"clicked\", true)\n                        .attr(\"fill\", \"#FFD700\");\n                        d3.select(`#countryLabel_${Object.keys(world).indexOf(d.country)}`).classed(\"clicked\", true)\n                        .style(\"visibility\", \"visible\");\n                        this.setState({clickedCountry: d.country})\n              }}\n              \n            />\n          ))}\n\n          {this.state.scrollBars.map((d, i) => (\n            <rect\n              key={i}\n              x={d.scrollX}\n              y={d.scrollY}\n              width={d.scrollWidth}\n              height={d.scrollHeight}\n              fill={d.scrollFill}\n            />\n          ))}\n\n          <rect\n            ref={this.scrollRef}\n            className=\"scroll-selector\"\n            x={this.state.scrollSelectorX}\n            y={this.state.svgHeight - this.state.svgScrollHeight}\n            width={this.state.scrollSelectorWidth}\n            height={this.state.svgScrollHeight}\n            style={{ fill: \"lightblue\", opacity: 0.5, cursor: \"ew-resize\" }}\n          />\n\n          <g>\n            <g\n              ref={this.xAxisRef}\n              transform={`translate(0, ${this.state.svgHeight -\n                50 -\n                this.state.svgMargin.bottom -\n                this.state.svgScrollHeight})`}\n            />\n            <g\n              ref={this.yAxisRef}\n              transform={`translate(${this.state.svgMargin.left}, 0)`}\n            />\n          </g>\n        </svg>\n        <Tooltip id=\"barchart-tooptip\" />\n      </>\n    );\n  }\n}\n\nexport default CountryBarChart;\n","import _ from \"lodash\";\n\nexport function Updatedata(\n  data,\n  Country,\n  Year,\n  Month,\n  Day,\n  AttackType,\n  Casualities\n) {\n  data = data.filter(\n    d =>\n      Country.includes(_.get(d, \"Country\")) &&\n      Year.includes(_.get(d, \"Year\")) &&\n      Month.includes(_.get(d, \"Month\")) &&\n      Day.includes(_.get(d, \"Day\")) &&\n      AttackType.includes(_.get(d, \"AttackType\")) &&\n      Casualities.includes(_.get(d, \"casualities\"))\n  );\n  return data;\n}\n","import React, { Component } from \"react\";\nimport {\n  Select,\n  Spin,\n  Form,\n  Slider,\n  InputNumber,\n  Row,\n  Col,\n  Radio,\n  Modal,\n  Button\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport _ from \"lodash\";\nimport styled from \"styled-components\";\nimport WorldMap from \"./lib/WorldMap\";\nimport TimelineChart from \"./lib/TimeLine\";\nimport CountryBarChart from \"./lib/countryBarchart\";\nimport { Updatedata } from \"./lib/util\";\n\n// import WorldMap from './lib/index'\n\nconst { Option } = Select;\nconst extractData = require(\"./lib/dataset/extract_dataset_small.json\");\nconst world = require(\"./lib/dataset/world.json\");\n\nconst Title = styled.div`\n  height: 200px;\n  background-image: url(\"https://storage.googleapis.com/kaggle-datasets-images/504/1012/b4f1185ba3ab02238e27a7e943fc8437/dataset-cover.png\");\n  color: white;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nconst TitleHeader = styled.div`\n  font-size: 25px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-left: 40px;\n  font-family: Arial;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  margin-top: 20px;\n  flex-direction: column;\n`;\n\nconst WorldMapContainer = styled.div`\n  height: 469px;\n  width: 60%;\n  background: #fbfbfb;\n  margin-bottom: 20px;\n  border: 1px solid #dedfe0;\n  display: flex;\n  flex-direction: column;\n  margin-left: 2%;\n`;\n\nconst WorldMapTitle = styled.div`\n  background: #f8f8f8;\n  height: 48px;\n  width: auto;\n  border-bottom: 1px solid #dedfe0;\n  border-radius: 4px 4px 0 0;\n  padding: 8px 24px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`;\n\nconst SelectionContainer = styled.div`\n  background: #fbfbfb;\n  width: 100%;\n  margin-bottom: 20px;\n  border: 1px solid #dedfe0;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 10px;\n`;\n\nconst SelectionHeaderContainer = styled.div`\n  background: #f8f8f8;\n  height: 48px;\n  width: auto;\n  border-bottom: 1px solid #dedfe0;\n  border-radius: 4px 4px 0 0;\n  padding: 8px 24px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`;\n\nconst SelectionHeader = styled.div`\n  align-self: center;\n  text-align: left;\n  padding-left: 12px;\n  max-width: 100%;\n  font-family: Arial;\n  color: rgba(0, 0, 0, 0.4);\n  font-weight: 600;\n  font-size: 16px;\n  flex: 1 1 auto;\n  overflow: hidden;\n`;\n\nconst SelectionItem = styled(Form.Item)`\n  label {\n    color: rgba(0, 0, 0, 0.7);\n    font-family: Arial;\n    font-weight: 600;\n    padding-top: 8px;\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CasualitiesValue: [\n        _.get(extractData[0], \"casualities\")[0],\n        _.get(extractData[0], \"casualities\")[\n          _.get(extractData[0], \"casualities\").length - 1\n        ]\n      ],\n      CountryFilter: _.get(extractData[0], \"Country\"),\n      YearFilter: _.get(extractData[0], \"Year\"),\n      MonthFilter: _.get(extractData[0], \"Month\"),\n      DayFilter: _.get(extractData[0], \"Day\"),\n      AttackTypeFilter: _.get(extractData[0], \"AttackType\"),\n      CasualitiesFilter: _.get(extractData[0], \"casualities\"),\n      displayValue: \"AttackType\",\n      displayValue2: \"DateType\",\n      ModalVisible: false,\n      range: []\n    };\n  }\n\n  async componentDidMount() {\n    const terrorist = await require(\"./lib/dataset/filtered_dataset_small.json\");\n\n    this.setState({\n      terrorist,\n      filteredData: terrorist,\n      filteredData2: terrorist\n    });\n  }\n\n  handleCountrySelectAll = value => {\n    if (value && value.length && value.includes(\"all\")) {\n      if (value.length === _.get(extractData[0], \"Country\").length + 1) {\n        this.setState({\n          filteredData: [],\n          CountryFilter: [],\n          filteredData2: []\n        });\n        return [];\n      }\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            _.get(extractData[0], \"Country\"),\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            _.get(extractData[0], \"Country\"),\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          CountryFilter: _.get(extractData[0], \"Country\")\n        };\n      });\n      return _.get(extractData[0], \"Country\");\n    } else {\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            value,\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            value,\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          CountryFilter: value\n        };\n      });\n      return value;\n    }\n  };\n\n  handleYearSelectAll = value => {\n    if (value && value.length && value.includes(\"all\")) {\n      if (value.length === _.get(extractData[0], \"Year\").length + 1) {\n        this.setState({\n          filteredData: [],\n          YearFilter: [],\n          filteredData2: []\n        });\n        return [];\n      }\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            _.get(extractData[0], \"Year\"),\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            _.get(extractData[0], \"Year\"),\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          YearFilter: _.get(extractData[0], \"Year\")\n        };\n      });\n      return _.get(extractData[0], \"Year\");\n    } else {\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            value,\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            value,\n            state.MonthFilter,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          YearFilter: value\n        };\n      });\n      return value;\n    }\n  };\n\n  handleMonthSelectAll = value => {\n    if (value && value.length && value.includes(\"all\")) {\n      if (value.length === _.get(extractData[0], \"Month\").length + 1) {\n        this.setState({ filteredData: [], MonthFilter: [], filteredData2: [] });\n        return [];\n      }\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            _.get(extractData[0], \"Month\"),\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            _.get(extractData[0], \"Month\"),\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          MonthFilter: _.get(extractData[0], \"Month\")\n        };\n      });\n      return _.get(extractData[0], \"Month\");\n    } else {\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            value,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            value,\n            state.DayFilter,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          MonthFilter: value\n        };\n      });\n      return value;\n    }\n  };\n\n  handleDaySelectAll = value => {\n    if (value && value.length && value.includes(\"all\")) {\n      if (value.length === _.get(extractData[0], \"Day\").length + 1) {\n        this.setState({ filteredData: [], DayFilter: [], filteredData2: [] });\n        return [];\n      }\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            _.get(extractData[0], \"Day\"),\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            _.get(extractData[0], \"Day\"),\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          DayFilter: _.get(extractData[0], \"Day\")\n        };\n      });\n      return _.get(extractData[0], \"Day\");\n    } else {\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            value,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            value,\n            state.AttackTypeFilter,\n            state.CasualitiesFilter\n          ),\n          DayFilter: value\n        };\n      });\n      return value;\n    }\n  };\n\n  handleAttackTypeSelectAll = value => {\n    if (value && value.length && value.includes(\"all\")) {\n      if (value.length === _.get(extractData[0], \"AttackType\").length + 1) {\n        this.setState({\n          filteredData: [],\n          AttackTypeFilter: [],\n          filteredData2: []\n        });\n        return [];\n      }\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            _.get(extractData[0], \"AttackType\"),\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            _.get(extractData[0], \"AttackType\"),\n            state.CasualitiesFilter\n          ),\n          AttackTypeFilter: _.get(extractData[0], \"AttackType\")\n        };\n      });\n      return _.get(extractData[0], \"AttackType\");\n    } else {\n      this.setState(state => {\n        return {\n          filteredData: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            value,\n            state.CasualitiesFilter\n          ),\n          filteredData2: Updatedata(\n            state.terrorist,\n            state.CountryFilter,\n            state.YearFilter,\n            state.MonthFilter,\n            state.DayFilter,\n            value,\n            state.CasualitiesFilter\n          ),\n          AttackTypeFilter: value\n        };\n      });\n      return value;\n    }\n  };\n\n  onCasualitiesChange = value => {\n    const filter = _.get(extractData[0], \"casualities\").filter(\n      d => d >= value[0] && d <= value[1]\n    );\n    this.setState({ CasualitiesValue: value });\n    this.setState(state => {\n      return {\n        filteredData: Updatedata(\n          state.terrorist,\n          state.CountryFilter,\n          state.YearFilter,\n          state.MonthFilter,\n          state.DayFilter,\n          state.AttackTypeFilter,\n          filter\n        ),\n        filteredData2: Updatedata(\n          state.terrorist,\n          state.CountryFilter,\n          state.YearFilter,\n          state.MonthFilter,\n          state.DayFilter,\n          state.AttackTypeFilter,\n          filter\n        ),\n        CasualitiesFilter: filter\n      };\n    });\n  };\n\n  onCasualitiesChangeMin = value => {\n    const { CasualitiesValue } = this.state;\n    const filter = _.get(extractData[0], \"casualities\").filter(\n      d => d >= value && d <= CasualitiesValue[1]\n    );\n    this.setState(state => {\n      return { CasualitiesValue: [value, state.CasualitiesValue[1]] };\n    });\n    this.setState(state => {\n      return {\n        filteredData: Updatedata(\n          state.terrorist,\n          state.CountryFilter,\n          state.YearFilter,\n          state.MonthFilter,\n          state.DayFilter,\n          state.AttackTypeFilter,\n          filter\n        ),\n        filteredData2: Updatedata(\n          state.terrorist,\n          state.CountryFilter,\n          state.YearFilter,\n          state.MonthFilter,\n          state.DayFilter,\n          state.AttackTypeFilter,\n          filter\n        ),\n        CasualitiesFilter: filter\n      };\n    });\n  };\n\n  onCasualitiesChangeMax = value => {\n    const { CasualitiesValue } = this.state;\n    const filter = _.get(extractData[0], \"casualities\").filter(\n      d => d >= CasualitiesValue[0] && d <= value\n    );\n    this.setState(state => {\n      return { CasualitiesValue: [state.CasualitiesValue[0], value] };\n    });\n    this.setState(state => {\n      return {\n        filteredData: Updatedata(\n          state.terrorist,\n          state.CountryFilter,\n          state.YearFilter,\n          state.MonthFilter,\n          state.DayFilter,\n          state.AttackTypeFilter,\n          filter\n        ),\n        filteredData2: Updatedata(\n          state.terrorist,\n          state.CountryFilter,\n          state.YearFilter,\n          state.MonthFilter,\n          state.DayFilter,\n          state.AttackTypeFilter,\n          filter\n        ),\n        CasualitiesFilter: filter\n      };\n    });\n  };\n\n  onDisplayChange = e => {\n    this.setState({ displayValue: e.target.value });\n  };\n\n  onDisplayChange2 = e => {\n    this.setState({ displayValue2: e.target.value });\n  };\n\n  showModal = () => {\n    this.setState({ ModalVisible: true });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      CasualitiesValue,\n      filteredData,\n      filteredData2,\n      displayValue,\n      displayValue2,\n      ModalVisible,\n      range\n    } = this.state;\n    const radioStyle = {\n      display: \"block\",\n      height: \"30px\",\n      lineHeight: \"30px\"\n    };\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          id=\"MainContainer\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            width: \"85%\"\n          }}\n          className=\"App\"\n        >\n          <Title>\n            <TitleHeader>Global Terrorism Activities</TitleHeader>\n          </Title>\n          <Container>\n            <div style={{ display: \"flex\" }}>\n              <SelectionContainer\n                id=\"selectionContainer\"\n                style={{ width: \"38%\" }}\n              >\n                <SelectionHeaderContainer>\n                  {\" \"}\n                  <SelectionHeader>Selection</SelectionHeader>{\" \"}\n                </SelectionHeaderContainer>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                    marginLeft: \"36px\",\n                    marginTop: \"10px\"\n                  }}\n                >\n                  <div>\n                    <Radio.Group\n                      onChange={this.onDisplayChange}\n                      value={displayValue}\n                      style={{\n                        color: \"rgba(0, 0, 0, 0.7)\",\n                        fontFamily: \"Arial\",\n                        fontWeight: 600,\n                        marginTop: \"10px\"\n                      }}\n                    >\n                      <Radio style={radioStyle} value={\"AttackType\"}>\n                        By Attack Types\n                      </Radio>\n                      <Radio style={radioStyle} value={\"Casualities\"}>\n                        By Casualties\n                      </Radio>\n                    </Radio.Group>\n                  </div>\n                  <div id=\"colorLegend\" style={{ marginTop: \"20px\" }} />\n                </div>\n                <div style={{ marginLeft: \"36px\" }}>\n                  <Button\n                    onClick={this.showModal}\n                    style={{\n                      backgroundColor: \"rgb(31, 120, 180)\",\n                      borderColor: \"rgb(31, 120, 180)\"\n                    }}\n                    type=\"primary\"\n                  >\n                    Open Filter\n                  </Button>\n                </div>\n\n                <Modal\n                  title=\"Filter\"\n                  visible={ModalVisible}\n                  footer={null}\n                  centered={true}\n                  width=\"70%\"\n                  onCancel={() => {\n                    this.setState({ ModalVisible: false });\n                  }}\n                >\n                  <div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        width: \"100%\",\n                        justifyContent: \"center\"\n                      }}\n                    >\n                      <SelectionItem\n                        label=\"Country\"\n                        style={{ width: \"80%\", paddingLeft: \"5px\" }}\n                      >\n                        {getFieldDecorator(`Country_Selection`, {\n                          initialValue: _.get(extractData[0], \"Country\"),\n                          getValueFromEvent: this.handleCountrySelectAll\n                        })(\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select Countries\"\n                            style={{ width: \"100%\" }}\n                            maxTagCount={20}\n                            onChange={this.handleCountrySelectAll}\n                            optionLabelProp=\"label\"\n                          >\n                            <Option key=\"all\" value=\"all\">\n                              ---SELECT ALL---\n                            </Option>\n                            {_.get(extractData[0], \"Country\").map(\n                              (ter, index) => {\n                                return (\n                                  <Option id={ter} value={ter} label={ter}>\n                                    {ter}\n                                  </Option>\n                                );\n                              }\n                            )}\n                          </Select>\n                        )}\n                      </SelectionItem>\n                    </div>\n\n                    <div\n                      style={{\n                        display: \"flex\",\n                        width: \"100%\",\n                        justifyContent: \"center\",\n                        marginTop: \"-10px\"\n                      }}\n                    >\n                      <SelectionItem\n                        label=\"Year\"\n                        style={{\n                          display: \"inline-block\",\n                          width: \"25%\",\n                          paddingLeft: \"5px\"\n                        }}\n                      >\n                        {getFieldDecorator(`Year_Selection`, {\n                          initialValue: _.get(extractData[0], \"Year\"),\n                          getValueFromEvent: this.handleYearSelectAll\n                        })(\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select Year(s)\"\n                            style={{ width: \"100%\" }}\n                            maxTagCount={5}\n                            onChange={this.handleYearSelectAll}\n                            optionLabelProp=\"label\"\n                          >\n                            <Option key=\"all\" value=\"all\">\n                              ---SELECT ALL---\n                            </Option>\n                            {_.get(extractData[0], \"Year\").map((ter, index) => {\n                              return (\n                                <Option id={ter} value={ter} label={ter}>\n                                  {ter}\n                                </Option>\n                              );\n                            })}\n                          </Select>\n                        )}\n                      </SelectionItem>\n\n                      <SelectionItem\n                        label=\"Month\"\n                        style={{\n                          display: \"inline-block\",\n                          width: \"25%\",\n                          marginLeft: \"2.5%\"\n                        }}\n                      >\n                        {getFieldDecorator(`Month_Selection`, {\n                          initialValue: _.get(extractData[0], \"Month\"),\n                          getValueFromEvent: this.handleMonthSelectAll\n                        })(\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select Month(s)\"\n                            style={{ width: \"100%\" }}\n                            maxTagCount={5}\n                            onChange={this.handleMonthSelectAll}\n                            optionLabelProp=\"label\"\n                          >\n                            <Option key=\"all\" value=\"all\">\n                              ---SELECT ALL---\n                            </Option>\n                            {_.get(extractData[0], \"Month\").map(\n                              (ter, index) => {\n                                return (\n                                  <Option id={ter} value={ter} label={ter}>\n                                    {ter}\n                                  </Option>\n                                );\n                              }\n                            )}\n                          </Select>\n                        )}\n                      </SelectionItem>\n\n                      <SelectionItem\n                        label=\"Day\"\n                        style={{\n                          display: \"inline-block\",\n                          width: \"25%\",\n                          marginLeft: \"2.5%\"\n                        }}\n                      >\n                        {getFieldDecorator(`Day_Selection`, {\n                          initialValue: _.get(extractData[0], \"Day\"),\n                          getValueFromEvent: this.handleDaySelectAll\n                        })(\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select Day(s)\"\n                            style={{ width: \"100%\" }}\n                            maxTagCount={5}\n                            onChange={this.handleDaySelectAll}\n                            optionLabelProp=\"label\"\n                          >\n                            <Option key=\"all\" value=\"all\">\n                              ---SELECT ALL---\n                            </Option>\n                            {_.get(extractData[0], \"Day\").map((ter, index) => {\n                              return (\n                                <Option id={ter} value={ter} label={ter}>\n                                  {ter}\n                                </Option>\n                              );\n                            })}\n                          </Select>\n                        )}\n                      </SelectionItem>\n                    </div>\n\n                    <div\n                      style={{\n                        display: \"flex\",\n                        width: \"100%\",\n                        justifyContent: \"center\",\n                        marginTop: \"-10px\"\n                      }}\n                    >\n                      <SelectionItem\n                        label=\"Attack Type\"\n                        style={{ width: \"80%\", paddingLeft: \"5px\" }}\n                      >\n                        {getFieldDecorator(`AttackType_Selection`, {\n                          initialValue: _.get(extractData[0], \"AttackType\"),\n                          getValueFromEvent: this.handleAttackTypeSelectAll\n                        })(\n                          <Select\n                            mode=\"multiple\"\n                            placeholder=\"Select Attack Type(s)\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleAttackTypeSelectAll}\n                            optionLabelProp=\"label\"\n                          >\n                            <Option key=\"all\" value=\"all\">\n                              ---SELECT ALL---\n                            </Option>\n                            {_.get(extractData[0], \"AttackType\").map(\n                              (ter, index) => {\n                                return (\n                                  <Option id={ter} value={ter} label={ter}>\n                                    {ter}\n                                  </Option>\n                                );\n                              }\n                            )}\n                          </Select>\n                        )}\n                      </SelectionItem>\n                    </div>\n\n                    <div\n                      style={{\n                        display: \"flex\",\n                        width: \"100%\",\n                        justifyContent: \"center\",\n                        marginTop: \"-10px\"\n                      }}\n                    >\n                      <SelectionItem\n                        label=\"Casualities\"\n                        style={{ width: \"80%\", paddingLeft: \"5px\" }}\n                      >\n                        {getFieldDecorator(`Casualities_Selection`, {\n                          // getValueFromEvent: this.handleAttackTypeSelectAll\n                        })(\n                          <Row>\n                            <Col span={3}>\n                              <InputNumber\n                                min={_.get(extractData[0], \"casualities\")[0]}\n                                max={\n                                  _.get(extractData[0], \"casualities\")[\n                                    _.get(extractData[0], \"casualities\")\n                                      .length - 1\n                                  ]\n                                }\n                                style={{ width: \"100%\" }}\n                                step={1}\n                                value={CasualitiesValue[0]}\n                                onChange={this.onCasualitiesChangeMin}\n                              />\n                            </Col>\n                            <Col style={{ marginLeft: \"16px\" }} span={16}>\n                              <Slider\n                                range\n                                defaultValue={CasualitiesValue}\n                                onChange={this.onCasualitiesChange}\n                                min={_.get(extractData[0], \"casualities\")[0]}\n                                max={\n                                  _.get(extractData[0], \"casualities\")[\n                                    _.get(extractData[0], \"casualities\")\n                                      .length - 1\n                                  ]\n                                }\n                                value={CasualitiesValue}\n                                step={1}\n                              />\n                            </Col>\n                            <Col span={4}>\n                              <InputNumber\n                                min={_.get(extractData[0], \"casualities\")[0]}\n                                max={\n                                  _.get(extractData[0], \"casualities\")[\n                                    _.get(extractData[0], \"casualities\")\n                                      .length - 1\n                                  ]\n                                }\n                                style={{ width: \"100%\", marginLeft: \"16px\" }}\n                                step={1}\n                                value={CasualitiesValue[1]}\n                                onChange={this.onCasualitiesChangeMax}\n                              />\n                            </Col>\n                          </Row>\n                        )}\n                      </SelectionItem>\n                    </div>\n                  </div>\n                </Modal>\n              </SelectionContainer>\n\n              {filteredData2 ? (\n                <WorldMapContainer id=\"WorldMapContainer\">\n                  <WorldMapTitle>\n                    <SelectionHeader>\n                      Terrorist Activity Spots ({filteredData2.length} Attacks)\n                    </SelectionHeader>\n                  </WorldMapTitle>\n                  <div\n                    id=\"div_template\"\n                    style={{ background: \"#89cff0\", height: \"100%\" }}\n                  >\n                    <WorldMap\n                      terrorist={filteredData2}\n                      extractData={extractData}\n                      displayValue={displayValue}\n                      world={world}\n                    />\n                  </div>\n                </WorldMapContainer>\n              ) : (\n                <div\n                  style={{\n                    width: \"auto\",\n                    height: \"100px\",\n                    marginBottom: \"20px\",\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  }}\n                >\n                  <Spin tip=\"Loading...\" />\n                </div>\n              )}\n            </div>\n            <div style={{ width: \"100%\", display: \"flex\" }}>\n              <SelectionContainer\n                id=\"selectionContainer\"\n                style={{ width: \"38%\" }}\n              >\n                <SelectionHeaderContainer>\n                  {\" \"}\n                  <SelectionHeader>Selection 2</SelectionHeader>{\" \"}\n                </SelectionHeaderContainer>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                    marginLeft: \"36px\",\n                    marginTop: \"10px\"\n                  }}\n                >\n                  <div>\n                    <Radio.Group\n                      onChange={this.onDisplayChange2}\n                      value={displayValue2}\n                      style={{\n                        color: \"rgba(0, 0, 0, 0.7)\",\n                        fontFamily: \"Arial\",\n                        fontWeight: 600,\n                        marginTop: \"10px\"\n                      }}\n                    >\n                      <Radio style={radioStyle} value={\"DateType\"}>\n                        By Date\n                      </Radio>\n                      <Radio style={radioStyle} value={\"CountryType\"}>\n                        By Country\n                      </Radio>\n                    </Radio.Group>\n                  </div>\n                  <div\n                    style={{\n                      color: \"rgba(0, 0, 0, 0.7)\",\n                      fontFamily: \"Arial\",\n                      fontWeight: 600,\n                      marginTop: \"30px\"\n                    }}\n                  >\n                    Casualities:\n                  </div>\n                  <div id=\"colorLegend2\" style={{ marginTop: \"20px\" }} />\n                </div>\n              </SelectionContainer>\n\n              {filteredData ? (\n                <WorldMapContainer id=\"TimelineContainer\">\n                  {displayValue2 === \"DateType\" ? (\n                    <>\n                      <WorldMapTitle>\n                        <SelectionHeader>\n                          Number of Terrorist Activities by Date\n                        </SelectionHeader>\n                      </WorldMapTitle>\n                      <TimelineChart\n                        terrorist={filteredData}\n                        range={range}\n                        updateRange={data => {\n                          this.setState({ range: data });\n                        }}\n                        updateTerrorist={data => {\n                          this.setState({ filteredData2: data });\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <WorldMapTitle>\n                        <SelectionHeader>\n                          Number of Terrorist Activities by Country\n                        </SelectionHeader>\n                      </WorldMapTitle>\n                      <CountryBarChart terrorist={filteredData} world={world} />\n                    </>\n                  )}\n                </WorldMapContainer>\n              ) : (\n                <div\n                  style={{\n                    width: \"auto\",\n                    height: \"100px\",\n                    marginBottom: \"20px\",\n                    display: \"flex\",\n                    justifyContent: \"center\"\n                  }}\n                >\n                  <Spin tip=\"Loading...\" />\n                </div>\n              )}\n            </div>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}